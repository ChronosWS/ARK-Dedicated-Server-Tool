<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:local="clr-namespace:ArkSMUI" xmlns:d="http://schemas.microsoft.com/expression/blend/2008" xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" xmlns:System="clr-namespace:System;assembly=mscorlib" mc:Ignorable="d">
    <ResourceDictionary.MergedDictionaries>
        <ResourceDictionary Source="Brushes.xaml"/>
    </ResourceDictionary.MergedDictionaries>
	<Style x:Key="ButtonDefault" TargetType="{x:Type Button}">
		<Setter Property="Background" Value="#FFDDDDDD"/>
		<Setter Property="BorderBrush" Value="#FF707070"/>
		<Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
		<Setter Property="BorderThickness" Value="1"/>
		<Setter Property="HorizontalContentAlignment" Value="Center"/>
		<Setter Property="VerticalContentAlignment" Value="Center"/>
		<Setter Property="Padding" Value="1"/>
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type Button}">
					<Border x:Name="border" SnapsToDevicePixels="true" Background="{DynamicResource Master_Brush}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}">
						<VisualStateManager.VisualStateGroups>
							<VisualStateGroup x:Name="CommonStates">
								<VisualState x:Name="Normal"/>
								<VisualState x:Name="MouseOver">
									<Storyboard>
										<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(Panel.Background)" Storyboard.TargetName="border">
											<DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource Lit_Brush}"/>
										</ObjectAnimationUsingKeyFrames>
									</Storyboard>
								</VisualState>
								<VisualState x:Name="Pressed">
									<Storyboard>
										<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(Panel.Background)" Storyboard.TargetName="border">
											<DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource Highlight_Brush}"/>
										</ObjectAnimationUsingKeyFrames>
									</Storyboard>
								</VisualState>
								<VisualState x:Name="Disabled">
									<Storyboard>
										<DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="contentPresenter">
											<EasingDoubleKeyFrame KeyTime="0" Value="0.3"/>
										</DoubleAnimationUsingKeyFrames>
										<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(Panel.Background)" Storyboard.TargetName="border">
											<DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource Disabled_Brush}"/>
										</ObjectAnimationUsingKeyFrames>
									</Storyboard>
								</VisualState>
							</VisualStateGroup>
						</VisualStateManager.VisualStateGroups>
						<ContentPresenter x:Name="contentPresenter" Focusable="False" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
					</Border>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>
	<Style x:Key="FocusVisual">
		<Setter Property="Control.Template">
			<Setter.Value>
				<ControlTemplate>
					<Rectangle Margin="2" SnapsToDevicePixels="true" Stroke="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" StrokeThickness="1" StrokeDashArray="1 2"/>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>
	<Style x:Key="OptionMarkFocusVisual">
		<Setter Property="Control.Template">
			<Setter.Value>
				<ControlTemplate>
					<Rectangle Margin="14,0,0,0" SnapsToDevicePixels="true" Stroke="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" StrokeThickness="1" StrokeDashArray="1 2"/>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>
	<Style x:Key="CheckBoxDefault" TargetType="{x:Type CheckBox}">
		<Setter Property="FocusVisualStyle" Value="{StaticResource FocusVisual}"/>
		<Setter Property="Background" Value="#FFFFFFFF"/>
		<Setter Property="BorderBrush" Value="#FF707070"/>
		<Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
		<Setter Property="BorderThickness" Value="1"/>
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type CheckBox}">
					<StackPanel x:Name="templateRoot" Background="Transparent" SnapsToDevicePixels="True" Orientation="Horizontal">
						<VisualStateManager.VisualStateGroups>
							<VisualStateGroup x:Name="CheckStates">
								<VisualStateGroup.Transitions>
									<VisualTransition GeneratedDuration="0:0:0.1" To="Checked">
										<Storyboard>
											<DoubleAnimation Duration="0:0:0.1" From="0" To="1" Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="_checked"/>
										</Storyboard>
									</VisualTransition>
									<VisualTransition From="Checked" GeneratedDuration="0:0:0.1" To="Unchecked">
										<Storyboard/>
									</VisualTransition>
								</VisualStateGroup.Transitions>
								<VisualState x:Name="Checked">
									<Storyboard>
										<DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="_checked">
											<EasingDoubleKeyFrame KeyTime="0" Value="1"/>
										</DoubleAnimationUsingKeyFrames>
									</Storyboard>
								</VisualState>
								<VisualState x:Name="Unchecked"/>
								<VisualState x:Name="Indeterminate"/>
							</VisualStateGroup>
						</VisualStateManager.VisualStateGroups>
						<Viewbox Margin="0" HorizontalAlignment="Left" Height="{TemplateBinding Height}" Width="{TemplateBinding Height}" Stretch="Fill">
							<Grid Height="17.052" Width="17.052">
								<Border x:Name="_unchecked" BorderBrush="{TemplateBinding BorderBrush}" Margin="0" HorizontalAlignment="Stretch" BorderThickness="{TemplateBinding BorderThickness}">
									<Border.Background>
										<ImageBrush ImageSource="UI_Assets/unchecked.jpg"/>
									</Border.Background>
								</Border>
								<Border x:Name="_checked" BorderThickness="{TemplateBinding BorderThickness}" HorizontalAlignment="Stretch" Margin="0" Width="Auto" Opacity="0" BorderBrush="{TemplateBinding BorderBrush}">
									<Border.Background>
										<ImageBrush ImageSource="UI_Assets/checked.jpg"/>
									</Border.Background>
								</Border>
							</Grid>
						</Viewbox>
						<ContentPresenter x:Name="contentPresenter" Focusable="False" Margin="8,0,0,0" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="Center" d:LayoutOverrides="TopPosition, BottomPosition" Height="Auto"/>
					</StackPanel>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>
	<Style x:Key="DecreaseButtonTwoColor" TargetType="{x:Type RepeatButton}">
		<Setter Property="OverridesDefaultStyle" Value="true"/>
		<Setter Property="Background" Value="Transparent"/>
		<Setter Property="Focusable" Value="false"/>
		<Setter Property="IsTabStop" Value="false"/>
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type RepeatButton}">
					<Grid Height="Auto">
						<Rectangle x:Name="ColorArea" Width="{TemplateBinding Width}" Height="4" Fill="{DynamicResource Highlight_Brush}" Opacity="1" Margin="0,7,5,7"/>
						<Rectangle x:Name="InteractionArea" Fill="{TemplateBinding Background}" Height="{TemplateBinding Height}" Width="{TemplateBinding Width}"/>
					</Grid>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>
    <Style x:Key="TextBoxDefault" TargetType="{x:Type TextBox}">
		<Setter Property="Background" Value="{DynamicResource {x:Static SystemColors.WindowBrushKey}}"/>
		<Setter Property="BorderBrush" Value="#FFABAdB3"/>
		<Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
		<Setter Property="BorderThickness" Value="1"/>
		<Setter Property="KeyboardNavigation.TabNavigation" Value="None"/>
		<Setter Property="HorizontalContentAlignment" Value="Left"/>
		<Setter Property="FocusVisualStyle" Value="{x:Null}"/>
		<Setter Property="AllowDrop" Value="true"/>
		<Setter Property="ScrollViewer.PanningMode" Value="VerticalFirst"/>
		<Setter Property="Stylus.IsFlicksEnabled" Value="False"/>
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type TextBox}">
					<Grid Height="Auto" Width="Auto">
						<Border Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}">
							<Border x:Name="border" BorderBrush="{DynamicResource DarkNeutral_Brush}" BorderThickness="{TemplateBinding BorderThickness}" SnapsToDevicePixels="True">
								<Border.Background>
									<ImageBrush ImageSource="UI_Assets/TextBoxInnerShadow.png"/>
								</Border.Background>
							</Border>
						</Border>
						<ScrollViewer x:Name="PART_ContentHost" Focusable="false" HorizontalScrollBarVisibility="Hidden" VerticalScrollBarVisibility="Hidden" Margin="4"/>
					</Grid>
					<ControlTemplate.Triggers>
						<Trigger Property="IsEnabled" Value="false">
							<Setter Property="Opacity" TargetName="border" Value="0.56"/>
						</Trigger>
						<Trigger Property="IsMouseOver" Value="true">
							<Setter Property="BorderBrush" TargetName="border" Value="#FF7EB4EA"/>
						</Trigger>
						<Trigger Property="IsKeyboardFocused" Value="true">
							<Setter Property="BorderBrush" TargetName="border" Value="#FF569DE5"/>
						</Trigger>
					</ControlTemplate.Triggers>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
		<Style.Triggers>
			<MultiTrigger>
				<MultiTrigger.Conditions>
					<Condition Property="IsInactiveSelectionHighlightEnabled" Value="true"/>
					<Condition Property="IsSelectionActive" Value="false"/>
				</MultiTrigger.Conditions>
				<Setter Property="SelectionBrush" Value="{DynamicResource {x:Static SystemColors.InactiveSelectionHighlightBrushKey}}"/>
			</MultiTrigger>
		</Style.Triggers>
	</Style>
	<FontFamily x:Key="DefaultFont">Montserrat</FontFamily>

	<System:Double x:Key="DefaultFontSize">16</System:Double>

</ResourceDictionary>